name: build
on: [push, pull_request]

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest, tf: 'default', r: 'release'}
        - {os: windows-latest, tf: 'default', r: 'release'}
        - {os: ubuntu-latest, tf: 'default', r: 'devel', http-user-agent: 'release'}
        - {os: ubuntu-latest, tf: 'default', r: 'release', covr: 'yes'}
        - {os: ubuntu-latest, tf: 'default', r: 'oldrel'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_CRAN_INCOMING_REMOTE_: false

    steps:
    - uses: actions/checkout@v3
    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.config.r }}
        http-user-agent: ${{ matrix.config.http-user-agent }}
        use-public-rspm: true
    - uses: r-lib/actions/setup-pandoc@v2
    - uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: any::rcmdcheck, any::covr, vdiffr@1.0.5
        needs: check, coverage
    - name: Miniconda + Tensorflow + Keras installation
      run: |
        reticulate::install_miniconda()
        keras::install_keras(tensorflow = '${{ matrix.tf }}-cpu')
      shell: Rscript {0}

    - name: Check
      uses: r-lib/actions/check-r-package@v2
      with:
        upload-snapshots: true

    - name: Test coverage
      if: ${{ success() && matrix.config.covr == 'yes' }}
      run: covr::codecov()
      shell: Rscript {0}
