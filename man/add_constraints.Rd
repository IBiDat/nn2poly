% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraints.R
\name{add_constraints}
\alias{add_constraints}
\title{Add constraints to a neural network}
\usage{
add_constraints(object, type = c("l1_norm", "l2_norm"), ...)
}
\arguments{
\item{object}{A neural network object in sequential form from one of the
supported frameworks.}

\item{type}{Constraint type. Currently, \code{l1_norm} and \code{l2_norm} are supported.}

\item{...}{Additional arguments (unused).}
}
\value{
A \code{nn2poly} neural network object.
}
\description{
This function sets up a neural network object with the constraints required
by the \code{\link{nn2poly}} algorithm. Currently supported neural network
frameworks are \code{keras/tensorflow} and \code{luz/torch}.
}
\details{
Constraints are added to the model object using callbacks in their specific
framework. These callbacks are used during training when calling fit on the
model. Specifically we are using callbacks that are applied at the end of
each train batch.

Models in \code{luz/torch} need to use the \code{\link{luz_model_sequential}}
helper in order to have a sequential model in the appropriate form.
}
\seealso{
\code{\link[=luz_model_sequential]{luz_model_sequential()}}
}
