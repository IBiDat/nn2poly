// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// alg_linear
NumericVector alg_linear(NumericVector weights_layer, ListOf<NumericVector> coeffs_list_input);
RcppExport SEXP _nn2poly_alg_linear(SEXP weights_layerSEXP, SEXP coeffs_list_inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights_layer(weights_layerSEXP);
    Rcpp::traits::input_parameter< ListOf<NumericVector> >::type coeffs_list_input(coeffs_list_inputSEXP);
    rcpp_result_gen = Rcpp::wrap(alg_linear(weights_layer, coeffs_list_input));
    return rcpp_result_gen;
END_RCPP
}
// combinations_with_repetition
IntegerMatrix combinations_with_repetition(int n, int k);
RcppExport SEXP _nn2poly_combinations_with_repetition(SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(combinations_with_repetition(n, k));
    return rcpp_result_gen;
END_RCPP
}
// generate_partitions
List generate_partitions(int p, int q_max);
RcppExport SEXP _nn2poly_generate_partitions(SEXP pSEXP, SEXP q_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q_max(q_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(generate_partitions(p, q_max));
    return rcpp_result_gen;
END_RCPP
}
// select_allowed_partitions_loop
List select_allowed_partitions_loop(List all_partitions_for_this_label, int q_previous_layer);
RcppExport SEXP _nn2poly_select_allowed_partitions_loop(SEXP all_partitions_for_this_labelSEXP, SEXP q_previous_layerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type all_partitions_for_this_label(all_partitions_for_this_labelSEXP);
    Rcpp::traits::input_parameter< int >::type q_previous_layer(q_previous_layerSEXP);
    rcpp_result_gen = Rcpp::wrap(select_allowed_partitions_loop(all_partitions_for_this_label, q_previous_layer));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nn2poly_alg_linear", (DL_FUNC) &_nn2poly_alg_linear, 2},
    {"_nn2poly_combinations_with_repetition", (DL_FUNC) &_nn2poly_combinations_with_repetition, 2},
    {"_nn2poly_generate_partitions", (DL_FUNC) &_nn2poly_generate_partitions, 2},
    {"_nn2poly_select_allowed_partitions_loop", (DL_FUNC) &_nn2poly_select_allowed_partitions_loop, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_nn2poly(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
